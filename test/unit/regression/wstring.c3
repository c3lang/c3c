module std::string::wstring_test;
import std;

WString a = @wstring("Hell√∏");
Char16[] x = @char16("√Ñr du d√§r?");
Char32[] x2 = @char32("‰Ω†Â•Ω");

fn void sanity_checks() @test
{
	test::eq(a[:6], (Char16[]) { 'H', 'e', 'l', 'l', '√∏', 0 });
	test::eq(x, "√Ñr du d√§r?".to_temp_utf16()!!);
	test::eq(x2, "‰Ω†Â•Ω".to_temp_utf32()!!);
}

fn void test_get_value() @test
{
	test::eq((ushort)'√Ñ', $$wstr16("√Ö√Ñ√ñ")[1]);
	const uint VAL = $$wstr32("XYZüëçABC")[3];
	test::eq((uint)'üëç', VAL);
}

fn void lengths() @test
{
	test::eq($$wstr16("ABC").len, 4);
	test::eq($$wstr16("ABC", false).len, 3);
	Char16[?] w = $$wstr16("√Ö√Ñ√ñ");
	test::eq(w, (Char16[?]) { '√Ö', '√Ñ', '√ñ', 0 });
}