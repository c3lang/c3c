// #target: macos-x64

module test;
import std::map;

define IntMap = HashMap<char[], int>;

fn void main()
{
	IntMap map;
	map.set("Hello", 4);
	map["Bye"] = 5;
}

/* #expect: test.ll

define void @test_main() #0 {
entry:
  %map = alloca %HashMap, align 8
  %0 = bitcast %HashMap* %map to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 40, i1 false)
  %1 = call i8 @"std_map$$sa$char.int_HashMap_set"(%HashMap* %map, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i64 5, i32 4)
  %2 = call i8 @"std_map$$sa$char.int_HashMap_set"(%HashMap* %map, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i64 3, i32 5)
  ret void
}
