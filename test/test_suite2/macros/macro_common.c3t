module test;

macro frab(x)
{
    if (!x) return 0;
    return 0.0;
}

fn void test2()
{
    frab(1);
    frab(0);
}

/* #expect: test.ll

define void @test.test2() #0 {
entry:
  %x = alloca i32, align 4
  %blockret = alloca double, align 8
  %x1 = alloca i32, align 4
  %blockret2 = alloca double, align 8
  store i32 1, ptr %x, align 4
  %0 = load i32, ptr %x, align 4
  %not = icmp eq i32 %0, 0
  br i1 %not, label %if.then, label %if.exit

if.then:                                          ; preds = %entry
  store double 0.000000e+00, ptr %blockret, align 8
  br label %expr_block.exit

if.exit:                                          ; preds = %entry
  store double 0.000000e+00, ptr %blockret, align 8
  br label %expr_block.exit

expr_block.exit:                                  ; preds = %if.exit, %if.then
  store i32 0, ptr %x1, align 4
  %1 = load i32, ptr %x1, align 4
  %not3 = icmp eq i32 %1, 0
  br i1 %not3, label %if.then4, label %if.exit5

if.then4:                                         ; preds = %expr_block.exit
  store double 0.000000e+00, ptr %blockret2, align 8
  br label %expr_block.exit6

if.exit5:                                         ; preds = %expr_block.exit
  store double 0.000000e+00, ptr %blockret2, align 8
  br label %expr_block.exit6

expr_block.exit6:                                 ; preds = %if.exit5, %if.then4
  ret void
}