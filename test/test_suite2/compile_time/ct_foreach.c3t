// #target: macos-x64
module test;

extern fn void printf(char*, ...);

fn void main()
{

    var $foo = { 1, 10, 34 };
    $foreach ($i : $foo):
       printf("Foo %d\n", $i);
    $endforeach;

    $foreach ($i, $j : $foo):
        printf("Bar %d %d\n", $i, $j);
    $endforeach;

    $foreach ($x : { 123, "abc", 1177, "hello" }):
        $typeof($x) z = $x;
        $switch ($typeof($x)):
        $case int:
            printf("Bar %d\n", $x);
        $default:
            printf("Bar %s\n", $x);
        $endswitch;
    $endforeach;

}

/* #expect: test.ll
define void @test.main() #0 {
entry:
  %z = alloca i32, align 4
  %z1 = alloca ptr, align 8
  %z2 = alloca i32, align 4
  %z3 = alloca ptr, align 8
  call void (ptr, ...) @printf(ptr @.str, i32 1)
  call void (ptr, ...) @printf(ptr @.str.1, i32 10)
  call void (ptr, ...) @printf(ptr @.str.2, i32 34)
  call void (ptr, ...) @printf(ptr @.str.3, i32 0, i32 1)
  call void (ptr, ...) @printf(ptr @.str.4, i32 1, i32 10)
  call void (ptr, ...) @printf(ptr @.str.5, i32 2, i32 34)
  store i32 123, ptr %z, align 4
  call void (ptr, ...) @printf(ptr @.str.6, i32 123)
  store ptr @.str.7, ptr %z1, align 8
  call void (ptr, ...) @printf(ptr @.str.8, ptr @.str.9)
  store i32 1177, ptr %z2, align 4
  call void (ptr, ...) @printf(ptr @.str.10, i32 1177)
  store ptr @.str.11, ptr %z3, align 8
  call void (ptr, ...) @printf(ptr @.str.12, ptr @.str.13)
  ret void
}
