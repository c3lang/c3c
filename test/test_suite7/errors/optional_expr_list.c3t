// #target: macos-x64
module test;

fn void main()
{
	int! n;
	for (n += 1, 1 + 1; false;);
}

/* #expect: test.ll


; ModuleID = 'test'
source_filename = "test"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

; Function Attrs: nounwind uwtable
define void @test.main() #0 {
entry:
  %n = alloca i32, align 4
  %n.f = alloca i64, align 8
  store i64 0, ptr %n.f, align 8
  store i32 0, ptr %n, align 4
  %optval = load i64, ptr %n.f, align 8
  %not_err = icmp eq i64 %optval, 0
  %0 = call i1 @llvm.expect.i1(i1 %not_err, i1 true)
  br i1 %0, label %after_check, label %voiderr

after_check:                                      ; preds = %entry
  %1 = load i32, ptr %n, align 4
  %add = add i32 %1, 1
  store i32 %add, ptr %n, align 4
  br label %voiderr

voiderr:                                          ; preds = %after_check, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %0, ptr %1) #0 {
entry:
  call void @test.main()
  ret i32 0
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #1

attributes #0 = { nounwind uwtable "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(none) }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5}

!0 = !{i32 2, !"Dwarf Version", i32 4}
!1 = !{i32 2, !"Debug Info Version", i32 3}
!2 = !{i32 2, !"wchar_size", i32 4}
!3 = !{i32 4, !"PIC Level", i32 2}
!4 = !{i32 1, !"uwtable", i32 2}
!5 = !{i32 2, !"frame-pointer", i32 2}
