// #target: macos-x64
module test;

extern fn void printf(char*, ...);

fn void main()
{

    var $foo = { 1, 10, 34 };
    $foreach ($i : $foo):
       printf("Foo %d\n", $i);
    $endforeach;

    $foreach ($i, $j : $foo):
        printf("Bar %d %d\n", $i, $j);
    $endforeach;

    $foreach ($x : { 123, "abc", 1177, "hello" }):
        $typeof($x) z = $x;
        $switch ($typeof($x)):
        $case int:
            printf("Bar %d\n", $x);
        $default:
            printf("Bar %s\n", $x);
        $endswitch;
    $endforeach;

}

/* #expect: test.ll
define void @test_main() #0 {
entry:
  %z = alloca i32, align 4
  %z1 = alloca [3 x i8]*, align 8
  %z2 = alloca i32, align 4
  %z3 = alloca [5 x i8]*, align 8
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1)
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i32 10)
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i32 34)
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i32 0, i32 1)
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), i32 1, i32 10)
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i32 2, i32 34)
  store i32 123, i32* %z, align 4
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i32 123)
  store [3 x i8]* bitcast ([4 x i8]* @.str.7 to [3 x i8]*), [3 x i8]** %z1, align 8
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), [3 x i8]* bitcast ([4 x i8]* @.str.9 to [3 x i8]*))
  store i32 1177, i32* %z2, align 4
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i32 1177)
  store [5 x i8]* bitcast ([6 x i8]* @.str.11 to [5 x i8]*), [5 x i8]** %z3, align 8
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), [5 x i8]* bitcast ([6 x i8]* @.str.13 to [5 x i8]*))
  ret void
}
