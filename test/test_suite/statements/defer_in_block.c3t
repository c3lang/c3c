// #target: macos-x64
module foo;
extern fn void printf(char*,...);

fn void test(int x)
{
	defer printf("---\n");
	{|
		defer printf("Hello %d\n", x);
		x *= 2;
		if (x < 100) return;
		x *= 10000;
	|};
	printf("+++\n");
	if (x == 0)
	{
		printf("0x\n");
		return;
	}
    if (x == 1) return;
}

fn void main()
{
	test(123);
	test(1);
	test(0);
}
/* #expect: foo.ll

define void @foo_test(i32 %0) #0 {
entry:
  %x = alloca i32, align 4
  store i32 %0, ptr %x, align 4
  %1 = load i32, ptr %x, align 4
  %mul = mul i32 %1, 2
  store i32 %mul, ptr %x, align 4
  %2 = load i32, ptr %x, align 4
  %lt = icmp slt i32 %2, 100
  br i1 %lt, label %if.then, label %if.exit

if.then:                                          ; preds = %entry
  %3 = load i32, ptr %x, align 4
  call void (ptr, ...) @printf(ptr @.str, i32 %3)
  br label %expr_block.exit

if.exit:                                          ; preds = %entry
  %4 = load i32, ptr %x, align 4
  %mul1 = mul i32 %4, 10000
  store i32 %mul1, ptr %x, align 4
  %5 = load i32, ptr %x, align 4
  call void (ptr, ...) @printf(ptr @.str.1, i32 %5)
  br label %expr_block.exit

expr_block.exit:                                  ; preds = %if.exit, %if.then
  call void (ptr, ...) @printf(ptr @.str.2)
  %6 = load i32, ptr %x, align 4
  %eq = icmp eq i32 %6, 0
  br i1 %eq, label %if.then2, label %if.exit3

if.then2:                                         ; preds = %expr_block.exit
  call void (ptr, ...) @printf(ptr @.str.3)
  call void (ptr, ...) @printf(ptr @.str.4)
  ret void

if.exit3:                                         ; preds = %expr_block.exit
  %7 = load i32, ptr %x, align 4
  %eq4 = icmp eq i32 %7, 1
  br i1 %eq4, label %if.then5, label %if.exit6

if.then5:                                         ; preds = %if.exit3
  call void (ptr, ...) @printf(ptr @.str.5)
  ret void

if.exit6:                                         ; preds = %if.exit3
  call void (ptr, ...) @printf(ptr @.str.6)
  ret void
}

; Function Attrs: nounwind
define void @foo_main() #0 {
entry:
  call void @foo_test(i32 123)
  call void @foo_test(i32 1)
  call void @foo_test(i32 0)
  ret void
}
