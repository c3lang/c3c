// #target: macos-x64
module test;
import std::io;

macro @hello(...)
{
	int[*] a = { 1, $vasplat(), 3 };
	foreach (i, x : a) io::printfln("%d: %d", i, x);
}

macro @hello1(...)
{
	int[*] a = { 1, $vasplat() };
	foreach (i, x : a) io::printfln("x:%d: %d", i, x);
}

macro @hello2(...)
{
	int[*] a = { $vasplat(), 888 };
	foreach (i, x : a) io::printfln("x:%d: %d", i, x);
}

macro @hello3(...)
{
	int[*] a = { $vasplat() };
	foreach (i, x : a) io::printfln("x:%d: %d", i, x);
}

macro @hello4(...)
{
	int[*] a = { 5, $vasplat(2..4), 77 };
	foreach (i, x : a) io::printfln("y:%d: %d", i, x);
}

macro @hello5(...)
{
	int[*] a = { 5, $vasplat(2..), 77 };
	foreach (i, x : a) io::printfln("y:%d: %d", i, x);
	int[*] b = { 55, $vasplat(2..^2), 88 };
	foreach (i, x : b) io::printfln("z:%d: %d", i, x);
	int[*] c = { 55, $vasplat(0:^2), 88 };
	foreach (i, x : c) io::printfln("zz:%d: %d", i, x);
}

macro @hello6(...)
{
	@hello(66, $vasplat());
}
fn void main()
{
  @hello1(223, 326);
  @hello1();
  @hello(26, 36);
  @hello();
  @hello2(2123, 3326);
  @hello2();
  @hello3(2123, 3326);
  @hello4(1, 2, 3, 4, 5, 6, 7, 8);
  @hello5(1, 2, 3, 4, 5, 6, 7, 8);
  @hello6(1, 2, 3);
}

/* #expect: test.ll

define void @test_main() #0 {
entry:
  %a = alloca [3 x i32], align 4
  %.anon = alloca i64, align 8
  %i = alloca i64, align 8
  %x = alloca i32, align 4
  %retparam = alloca i64, align 8
  %taddr = alloca %"char[]", align 8
  %vararg = alloca %"variant[]", align 8
  %varargslots = alloca [2 x %variant], align 16
  %a3 = alloca [1 x i32], align 4
  %.anon4 = alloca i64, align 8
  %i8 = alloca i64, align 8
  %x9 = alloca i32, align 4
  %retparam10 = alloca i64, align 8
  %taddr11 = alloca %"char[]", align 8
  %vararg14 = alloca %"variant[]", align 8
  %varargslots15 = alloca [2 x %variant], align 16
  %a23 = alloca [4 x i32], align 16
  %.anon24 = alloca i64, align 8
  %i28 = alloca i64, align 8
  %x29 = alloca i32, align 4
  %retparam30 = alloca i64, align 8
  %taddr31 = alloca %"char[]", align 8
  %vararg34 = alloca %"variant[]", align 8
  %varargslots35 = alloca [2 x %variant], align 16
  %a43 = alloca [2 x i32], align 4
  %.anon44 = alloca i64, align 8
  %i48 = alloca i64, align 8
  %x49 = alloca i32, align 4
  %retparam50 = alloca i64, align 8
  %taddr51 = alloca %"char[]", align 8
  %vararg54 = alloca %"variant[]", align 8
  %varargslots55 = alloca [2 x %variant], align 16
  %a63 = alloca [3 x i32], align 4
  %.anon64 = alloca i64, align 8
  %i68 = alloca i64, align 8
  %x69 = alloca i32, align 4
  %retparam70 = alloca i64, align 8
  %taddr71 = alloca %"char[]", align 8
  %vararg74 = alloca %"variant[]", align 8
  %varargslots75 = alloca [2 x %variant], align 16
  %a83 = alloca [1 x i32], align 4
  %.anon84 = alloca i64, align 8
  %i88 = alloca i64, align 8
  %x89 = alloca i32, align 4
  %retparam90 = alloca i64, align 8
  %taddr91 = alloca %"char[]", align 8
  %vararg94 = alloca %"variant[]", align 8
  %varargslots95 = alloca [2 x %variant], align 16
  %a103 = alloca [2 x i32], align 4
  %.anon104 = alloca i64, align 8
  %i108 = alloca i64, align 8
  %x109 = alloca i32, align 4
  %retparam110 = alloca i64, align 8
  %taddr111 = alloca %"char[]", align 8
  %vararg114 = alloca %"variant[]", align 8
  %varargslots115 = alloca [2 x %variant], align 16
  %a123 = alloca [5 x i32], align 16
  %.anon124 = alloca i64, align 8
  %i128 = alloca i64, align 8
  %x129 = alloca i32, align 4
  %retparam130 = alloca i64, align 8
  %taddr131 = alloca %"char[]", align 8
  %vararg134 = alloca %"variant[]", align 8
  %varargslots135 = alloca [2 x %variant], align 16
  %a143 = alloca [8 x i32], align 16
  %.anon144 = alloca i64, align 8
  %i148 = alloca i64, align 8
  %x149 = alloca i32, align 4
  %retparam150 = alloca i64, align 8
  %taddr151 = alloca %"char[]", align 8
  %vararg154 = alloca %"variant[]", align 8
  %varargslots155 = alloca [2 x %variant], align 16
  %b = alloca [7 x i32], align 16
  %.anon163 = alloca i64, align 8
  %i167 = alloca i64, align 8
  %x168 = alloca i32, align 4
  %retparam169 = alloca i64, align 8
  %taddr170 = alloca %"char[]", align 8
  %vararg173 = alloca %"variant[]", align 8
  %varargslots174 = alloca [2 x %variant], align 16
  %c = alloca [8 x i32], align 16
  %.anon182 = alloca i64, align 8
  %i186 = alloca i64, align 8
  %x187 = alloca i32, align 4
  %retparam188 = alloca i64, align 8
  %taddr189 = alloca %"char[]", align 8
  %vararg192 = alloca %"variant[]", align 8
  %varargslots193 = alloca [2 x %variant], align 16
  %a201 = alloca [6 x i32], align 16
  %.anon202 = alloca i64, align 8
  %i206 = alloca i64, align 8
  %x207 = alloca i32, align 4
  %retparam208 = alloca i64, align 8
  %taddr209 = alloca %"char[]", align 8
  %vararg212 = alloca %"variant[]", align 8
  %varargslots213 = alloca [2 x %variant], align 16
  %0 = bitcast [3 x i32]* %a to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %0, i8* align 4 bitcast ([3 x i32]* @.__const to i8*), i32 12, i1 false)
  store i64 0, i64* %.anon, align 8
  br label %loop.cond
loop.cond:                                        ; preds = %voiderr, %entry
  %1 = load i64, i64* %.anon, align 8
  %gt = icmp ugt i64 3, %1
  br i1 %gt, label %loop.body, label %loop.exit
loop.body:                                        ; preds = %loop.cond
  %2 = load i64, i64* %.anon, align 8
  store i64 %2, i64* %i, align 8
  %3 = load i64, i64* %.anon, align 8
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* %a, i64 0, i64 %3
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %x, align 4
  store %"char[]" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i64 8 }, %"char[]"* %taddr, align 8
  %6 = bitcast %"char[]"* %taddr to { i8*, i64 }*
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 0
  %lo = load i8*, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 1
  %hi = load i64, i64* %8, align 8
  %9 = bitcast i64* %i to i8*
  %10 = insertvalue %variant undef, i8* %9, 0
  %11 = insertvalue %variant %10, i64 ptrtoint (%.introspect* @"ct$ulong" to i64), 1
  %12 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots, i64 0, i64 0
  store %variant %11, %variant* %12, align 16
  %13 = bitcast i32* %x to i8*
  %14 = insertvalue %variant undef, i8* %13, 0
  %15 = insertvalue %variant %14, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %16 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots, i64 0, i64 1
  store %variant %15, %variant* %16, align 16
  %17 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg, i32 0, i32 1
  store i64 2, i64* %17, align 8
  %18 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg, i32 0, i32 0
  %19 = bitcast [2 x %variant]* %varargslots to %variant*
  store %variant* %19, %variant** %18, align 8
  %20 = bitcast %"variant[]"* %vararg to { i8*, i64 }*
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %20, i32 0, i32 0
  %lo1 = load i8*, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %20, i32 0, i32 1
  %hi2 = load i64, i64* %22, align 8
  %23 = call i64 @std_io_printfln(i64* %retparam, i8* %lo, i64 %hi, i8* %lo1, i64 %hi2)
  %not_err = icmp eq i64 %23, 0
  br i1 %not_err, label %after_check, label %voiderr
after_check:                                      ; preds = %loop.body
  br label %voiderr
voiderr:                                          ; preds = %after_check, %loop.body
  %24 = load i64, i64* %.anon, align 8
  %add = add i64 %24, 1
  store i64 %add, i64* %.anon, align 8
  br label %loop.cond
loop.exit:                                        ; preds = %loop.cond
  %25 = bitcast [1 x i32]* %a3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %25, i8* align 4 bitcast ([1 x i32]* @.__const.1 to i8*), i32 4, i1 false)
  store i64 0, i64* %.anon4, align 8
  br label %loop.cond5
loop.cond5:                                       ; preds = %voiderr20, %loop.exit
  %26 = load i64, i64* %.anon4, align 8
  %gt6 = icmp ugt i64 1, %26
  br i1 %gt6, label %loop.body7, label %loop.exit22
loop.body7:                                       ; preds = %loop.cond5
  %27 = load i64, i64* %.anon4, align 8
  store i64 %27, i64* %i8, align 8
  %28 = load i64, i64* %.anon4, align 8
  %29 = getelementptr inbounds [1 x i32], [1 x i32]* %a3, i64 0, i64 %28
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %x9, align 4
  store %"char[]" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), i64 8 }, %"char[]"* %taddr11, align 8
  %31 = bitcast %"char[]"* %taddr11 to { i8*, i64 }*
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %31, i32 0, i32 0
  %lo12 = load i8*, i8** %32, align 8
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %31, i32 0, i32 1
  %hi13 = load i64, i64* %33, align 8
  %34 = bitcast i64* %i8 to i8*
  %35 = insertvalue %variant undef, i8* %34, 0
  %36 = insertvalue %variant %35, i64 ptrtoint (%.introspect* @"ct$ulong" to i64), 1
  %37 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots15, i64 0, i64 0
  store %variant %36, %variant* %37, align 16
  %38 = bitcast i32* %x9 to i8*
  %39 = insertvalue %variant undef, i8* %38, 0
  %40 = insertvalue %variant %39, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %41 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots15, i64 0, i64 1
  store %variant %40, %variant* %41, align 16
  %42 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg14, i32 0, i32 1
  store i64 2, i64* %42, align 8
  %43 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg14, i32 0, i32 0
  %44 = bitcast [2 x %variant]* %varargslots15 to %variant*
  store %variant* %44, %variant** %43, align 8
  %45 = bitcast %"variant[]"* %vararg14 to { i8*, i64 }*
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %45, i32 0, i32 0
  %lo16 = load i8*, i8** %46, align 8
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %45, i32 0, i32 1
  %hi17 = load i64, i64* %47, align 8
  %48 = call i64 @std_io_printfln(i64* %retparam10, i8* %lo12, i64 %hi13, i8* %lo16, i64 %hi17)
  %not_err18 = icmp eq i64 %48, 0
  br i1 %not_err18, label %after_check19, label %voiderr20
after_check19:                                    ; preds = %loop.body7
  br label %voiderr20
voiderr20:                                        ; preds = %after_check19, %loop.body7
  %49 = load i64, i64* %.anon4, align 8
  %add21 = add i64 %49, 1
  store i64 %add21, i64* %.anon4, align 8
  br label %loop.cond5
loop.exit22:                                      ; preds = %loop.cond5
  %50 = bitcast [4 x i32]* %a23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %50, i8* align 16 bitcast ([4 x i32]* @.__const.3 to i8*), i32 16, i1 false)
  store i64 0, i64* %.anon24, align 8
  br label %loop.cond25
loop.cond25:                                      ; preds = %voiderr40, %loop.exit22
  %51 = load i64, i64* %.anon24, align 8
  %gt26 = icmp ugt i64 4, %51
  br i1 %gt26, label %loop.body27, label %loop.exit42
loop.body27:                                      ; preds = %loop.cond25
  %52 = load i64, i64* %.anon24, align 8
  store i64 %52, i64* %i28, align 8
  %53 = load i64, i64* %.anon24, align 8
  %54 = getelementptr inbounds [4 x i32], [4 x i32]* %a23, i64 0, i64 %53
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %x29, align 4
  store %"char[]" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i64 6 }, %"char[]"* %taddr31, align 8
  %56 = bitcast %"char[]"* %taddr31 to { i8*, i64 }*
  %57 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %56, i32 0, i32 0
  %lo32 = load i8*, i8** %57, align 8
  %58 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %56, i32 0, i32 1
  %hi33 = load i64, i64* %58, align 8
  %59 = bitcast i64* %i28 to i8*
  %60 = insertvalue %variant undef, i8* %59, 0
  %61 = insertvalue %variant %60, i64 ptrtoint (%.introspect* @"ct$ulong" to i64), 1
  %62 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots35, i64 0, i64 0
  store %variant %61, %variant* %62, align 16
  %63 = bitcast i32* %x29 to i8*
  %64 = insertvalue %variant undef, i8* %63, 0
  %65 = insertvalue %variant %64, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %66 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots35, i64 0, i64 1
  store %variant %65, %variant* %66, align 16
  %67 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg34, i32 0, i32 1
  store i64 2, i64* %67, align 8
  %68 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg34, i32 0, i32 0
  %69 = bitcast [2 x %variant]* %varargslots35 to %variant*
  store %variant* %69, %variant** %68, align 8
  %70 = bitcast %"variant[]"* %vararg34 to { i8*, i64 }*
  %71 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %70, i32 0, i32 0
  %lo36 = load i8*, i8** %71, align 8
  %72 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %70, i32 0, i32 1
  %hi37 = load i64, i64* %72, align 8
  %73 = call i64 @std_io_printfln(i64* %retparam30, i8* %lo32, i64 %hi33, i8* %lo36, i64 %hi37)
  %not_err38 = icmp eq i64 %73, 0
  br i1 %not_err38, label %after_check39, label %voiderr40
after_check39:                                    ; preds = %loop.body27
  br label %voiderr40
voiderr40:                                        ; preds = %after_check39, %loop.body27
  %74 = load i64, i64* %.anon24, align 8
  %add41 = add i64 %74, 1
  store i64 %add41, i64* %.anon24, align 8
  br label %loop.cond25
loop.exit42:                                      ; preds = %loop.cond25
  %75 = bitcast [2 x i32]* %a43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %75, i8* align 4 bitcast ([2 x i32]* @.__const.5 to i8*), i32 8, i1 false)
  store i64 0, i64* %.anon44, align 8
  br label %loop.cond45
loop.cond45:                                      ; preds = %voiderr60, %loop.exit42
  %76 = load i64, i64* %.anon44, align 8
  %gt46 = icmp ugt i64 2, %76
  br i1 %gt46, label %loop.body47, label %loop.exit62
loop.body47:                                      ; preds = %loop.cond45
  %77 = load i64, i64* %.anon44, align 8
  store i64 %77, i64* %i48, align 8
  %78 = load i64, i64* %.anon44, align 8
  %79 = getelementptr inbounds [2 x i32], [2 x i32]* %a43, i64 0, i64 %78
  %80 = load i32, i32* %79, align 4
  store i32 %80, i32* %x49, align 4
  store %"char[]" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i64 6 }, %"char[]"* %taddr51, align 8
  %81 = bitcast %"char[]"* %taddr51 to { i8*, i64 }*
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0
  %lo52 = load i8*, i8** %82, align 8
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1
  %hi53 = load i64, i64* %83, align 8
  %84 = bitcast i64* %i48 to i8*
  %85 = insertvalue %variant undef, i8* %84, 0
  %86 = insertvalue %variant %85, i64 ptrtoint (%.introspect* @"ct$ulong" to i64), 1
  %87 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots55, i64 0, i64 0
  store %variant %86, %variant* %87, align 16
  %88 = bitcast i32* %x49 to i8*
  %89 = insertvalue %variant undef, i8* %88, 0
  %90 = insertvalue %variant %89, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %91 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots55, i64 0, i64 1
  store %variant %90, %variant* %91, align 16
  %92 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg54, i32 0, i32 1
  store i64 2, i64* %92, align 8
  %93 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg54, i32 0, i32 0
  %94 = bitcast [2 x %variant]* %varargslots55 to %variant*
  store %variant* %94, %variant** %93, align 8
  %95 = bitcast %"variant[]"* %vararg54 to { i8*, i64 }*
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %95, i32 0, i32 0
  %lo56 = load i8*, i8** %96, align 8
  %97 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %95, i32 0, i32 1
  %hi57 = load i64, i64* %97, align 8
  %98 = call i64 @std_io_printfln(i64* %retparam50, i8* %lo52, i64 %hi53, i8* %lo56, i64 %hi57)
  %not_err58 = icmp eq i64 %98, 0
  br i1 %not_err58, label %after_check59, label %voiderr60
after_check59:                                    ; preds = %loop.body47
  br label %voiderr60
voiderr60:                                        ; preds = %after_check59, %loop.body47
  %99 = load i64, i64* %.anon44, align 8
  %add61 = add i64 %99, 1
  store i64 %add61, i64* %.anon44, align 8
  br label %loop.cond45
loop.exit62:                                      ; preds = %loop.cond45
  %100 = bitcast [3 x i32]* %a63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %100, i8* align 4 bitcast ([3 x i32]* @.__const.7 to i8*), i32 12, i1 false)
  store i64 0, i64* %.anon64, align 8
  br label %loop.cond65
loop.cond65:                                      ; preds = %voiderr80, %loop.exit62
  %101 = load i64, i64* %.anon64, align 8
  %gt66 = icmp ugt i64 3, %101
  br i1 %gt66, label %loop.body67, label %loop.exit82
loop.body67:                                      ; preds = %loop.cond65
  %102 = load i64, i64* %.anon64, align 8
  store i64 %102, i64* %i68, align 8
  %103 = load i64, i64* %.anon64, align 8
  %104 = getelementptr inbounds [3 x i32], [3 x i32]* %a63, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  store i32 %105, i32* %x69, align 4
  store %"char[]" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i64 8 }, %"char[]"* %taddr71, align 8
  %106 = bitcast %"char[]"* %taddr71 to { i8*, i64 }*
  %107 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %106, i32 0, i32 0
  %lo72 = load i8*, i8** %107, align 8
  %108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %106, i32 0, i32 1
  %hi73 = load i64, i64* %108, align 8
  %109 = bitcast i64* %i68 to i8*
  %110 = insertvalue %variant undef, i8* %109, 0
  %111 = insertvalue %variant %110, i64 ptrtoint (%.introspect* @"ct$ulong" to i64), 1
  %112 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots75, i64 0, i64 0
  store %variant %111, %variant* %112, align 16
  %113 = bitcast i32* %x69 to i8*
  %114 = insertvalue %variant undef, i8* %113, 0
  %115 = insertvalue %variant %114, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %116 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots75, i64 0, i64 1
  store %variant %115, %variant* %116, align 16
  %117 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg74, i32 0, i32 1
  store i64 2, i64* %117, align 8
  %118 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg74, i32 0, i32 0
  %119 = bitcast [2 x %variant]* %varargslots75 to %variant*
  store %variant* %119, %variant** %118, align 8
  %120 = bitcast %"variant[]"* %vararg74 to { i8*, i64 }*
  %121 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %120, i32 0, i32 0
  %lo76 = load i8*, i8** %121, align 8
  %122 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %120, i32 0, i32 1
  %hi77 = load i64, i64* %122, align 8
  %123 = call i64 @std_io_printfln(i64* %retparam70, i8* %lo72, i64 %hi73, i8* %lo76, i64 %hi77)
  %not_err78 = icmp eq i64 %123, 0
  br i1 %not_err78, label %after_check79, label %voiderr80
after_check79:                                    ; preds = %loop.body67
  br label %voiderr80
voiderr80:                                        ; preds = %after_check79, %loop.body67
  %124 = load i64, i64* %.anon64, align 8
  %add81 = add i64 %124, 1
  store i64 %add81, i64* %.anon64, align 8
  br label %loop.cond65
loop.exit82:                                      ; preds = %loop.cond65
  %125 = bitcast [1 x i32]* %a83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %125, i8* align 4 bitcast ([1 x i32]* @.__const.9 to i8*), i32 4, i1 false)
  store i64 0, i64* %.anon84, align 8
  br label %loop.cond85
loop.cond85:                                      ; preds = %voiderr100, %loop.exit82
  %126 = load i64, i64* %.anon84, align 8
  %gt86 = icmp ugt i64 1, %126
  br i1 %gt86, label %loop.body87, label %loop.exit102
loop.body87:                                      ; preds = %loop.cond85
  %127 = load i64, i64* %.anon84, align 8
  store i64 %127, i64* %i88, align 8
  %128 = load i64, i64* %.anon84, align 8
  %129 = getelementptr inbounds [1 x i32], [1 x i32]* %a83, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  store i32 %130, i32* %x89, align 4
  store %"char[]" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0), i64 8 }, %"char[]"* %taddr91, align 8
  %131 = bitcast %"char[]"* %taddr91 to { i8*, i64 }*
  %132 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %131, i32 0, i32 0
  %lo92 = load i8*, i8** %132, align 8
  %133 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %131, i32 0, i32 1
  %hi93 = load i64, i64* %133, align 8
  %134 = bitcast i64* %i88 to i8*
  %135 = insertvalue %variant undef, i8* %134, 0
  %136 = insertvalue %variant %135, i64 ptrtoint (%.introspect* @"ct$ulong" to i64), 1
  %137 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots95, i64 0, i64 0
  store %variant %136, %variant* %137, align 16
  %138 = bitcast i32* %x89 to i8*
  %139 = insertvalue %variant undef, i8* %138, 0
  %140 = insertvalue %variant %139, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %141 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots95, i64 0, i64 1
  store %variant %140, %variant* %141, align 16
  %142 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg94, i32 0, i32 1
  store i64 2, i64* %142, align 8
  %143 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg94, i32 0, i32 0
  %144 = bitcast [2 x %variant]* %varargslots95 to %variant*
  store %variant* %144, %variant** %143, align 8
  %145 = bitcast %"variant[]"* %vararg94 to { i8*, i64 }*
  %146 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %145, i32 0, i32 0
  %lo96 = load i8*, i8** %146, align 8
  %147 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %145, i32 0, i32 1
  %hi97 = load i64, i64* %147, align 8
  %148 = call i64 @std_io_printfln(i64* %retparam90, i8* %lo92, i64 %hi93, i8* %lo96, i64 %hi97)
  %not_err98 = icmp eq i64 %148, 0
  br i1 %not_err98, label %after_check99, label %voiderr100
after_check99:                                    ; preds = %loop.body87
  br label %voiderr100
voiderr100:                                       ; preds = %after_check99, %loop.body87
  %149 = load i64, i64* %.anon84, align 8
  %add101 = add i64 %149, 1
  store i64 %add101, i64* %.anon84, align 8
  br label %loop.cond85
loop.exit102:                                     ; preds = %loop.cond85
  %150 = bitcast [2 x i32]* %a103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %150, i8* align 4 bitcast ([2 x i32]* @.__const.11 to i8*), i32 8, i1 false)
  store i64 0, i64* %.anon104, align 8
  br label %loop.cond105
loop.cond105:                                     ; preds = %voiderr120, %loop.exit102
  %151 = load i64, i64* %.anon104, align 8
  %gt106 = icmp ugt i64 2, %151
  br i1 %gt106, label %loop.body107, label %loop.exit122
loop.body107:                                     ; preds = %loop.cond105
  %152 = load i64, i64* %.anon104, align 8
  store i64 %152, i64* %i108, align 8
  %153 = load i64, i64* %.anon104, align 8
  %154 = getelementptr inbounds [2 x i32], [2 x i32]* %a103, i64 0, i64 %153
  %155 = load i32, i32* %154, align 4
  store i32 %155, i32* %x109, align 4
  store %"char[]" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i64 8 }, %"char[]"* %taddr111, align 8
  %156 = bitcast %"char[]"* %taddr111 to { i8*, i64 }*
  %157 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %156, i32 0, i32 0
  %lo112 = load i8*, i8** %157, align 8
  %158 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %156, i32 0, i32 1
  %hi113 = load i64, i64* %158, align 8
  %159 = bitcast i64* %i108 to i8*
  %160 = insertvalue %variant undef, i8* %159, 0
  %161 = insertvalue %variant %160, i64 ptrtoint (%.introspect* @"ct$ulong" to i64), 1
  %162 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots115, i64 0, i64 0
  store %variant %161, %variant* %162, align 16
  %163 = bitcast i32* %x109 to i8*
  %164 = insertvalue %variant undef, i8* %163, 0
  %165 = insertvalue %variant %164, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %166 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots115, i64 0, i64 1
  store %variant %165, %variant* %166, align 16
  %167 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg114, i32 0, i32 1
  store i64 2, i64* %167, align 8
  %168 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg114, i32 0, i32 0
  %169 = bitcast [2 x %variant]* %varargslots115 to %variant*
  store %variant* %169, %variant** %168, align 8
  %170 = bitcast %"variant[]"* %vararg114 to { i8*, i64 }*
  %171 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %170, i32 0, i32 0
  %lo116 = load i8*, i8** %171, align 8
  %172 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %170, i32 0, i32 1
  %hi117 = load i64, i64* %172, align 8
  %173 = call i64 @std_io_printfln(i64* %retparam110, i8* %lo112, i64 %hi113, i8* %lo116, i64 %hi117)
  %not_err118 = icmp eq i64 %173, 0
  br i1 %not_err118, label %after_check119, label %voiderr120
after_check119:                                   ; preds = %loop.body107
  br label %voiderr120
voiderr120:                                       ; preds = %after_check119, %loop.body107
  %174 = load i64, i64* %.anon104, align 8
  %add121 = add i64 %174, 1
  store i64 %add121, i64* %.anon104, align 8
  br label %loop.cond105
loop.exit122:                                     ; preds = %loop.cond105
  %175 = bitcast [5 x i32]* %a123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %175, i8* align 16 bitcast ([5 x i32]* @.__const.13 to i8*), i32 20, i1 false)
  store i64 0, i64* %.anon124, align 8
  br label %loop.cond125
loop.cond125:                                     ; preds = %voiderr140, %loop.exit122
  %176 = load i64, i64* %.anon124, align 8
  %gt126 = icmp ugt i64 5, %176
  br i1 %gt126, label %loop.body127, label %loop.exit142
loop.body127:                                     ; preds = %loop.cond125
  %177 = load i64, i64* %.anon124, align 8
  store i64 %177, i64* %i128, align 8
  %178 = load i64, i64* %.anon124, align 8
  %179 = getelementptr inbounds [5 x i32], [5 x i32]* %a123, i64 0, i64 %178
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %x129, align 4
  store %"char[]" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), i64 8 }, %"char[]"* %taddr131, align 8
  %181 = bitcast %"char[]"* %taddr131 to { i8*, i64 }*
  %182 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %181, i32 0, i32 0
  %lo132 = load i8*, i8** %182, align 8
  %183 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %181, i32 0, i32 1
  %hi133 = load i64, i64* %183, align 8
  %184 = bitcast i64* %i128 to i8*
  %185 = insertvalue %variant undef, i8* %184, 0
  %186 = insertvalue %variant %185, i64 ptrtoint (%.introspect* @"ct$ulong" to i64), 1
  %187 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots135, i64 0, i64 0
  store %variant %186, %variant* %187, align 16
  %188 = bitcast i32* %x129 to i8*
  %189 = insertvalue %variant undef, i8* %188, 0
  %190 = insertvalue %variant %189, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %191 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots135, i64 0, i64 1
  store %variant %190, %variant* %191, align 16
  %192 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg134, i32 0, i32 1
  store i64 2, i64* %192, align 8
  %193 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg134, i32 0, i32 0
  %194 = bitcast [2 x %variant]* %varargslots135 to %variant*
  store %variant* %194, %variant** %193, align 8
  %195 = bitcast %"variant[]"* %vararg134 to { i8*, i64 }*
  %196 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %195, i32 0, i32 0
  %lo136 = load i8*, i8** %196, align 8
  %197 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %195, i32 0, i32 1
  %hi137 = load i64, i64* %197, align 8
  %198 = call i64 @std_io_printfln(i64* %retparam130, i8* %lo132, i64 %hi133, i8* %lo136, i64 %hi137)
  %not_err138 = icmp eq i64 %198, 0
  br i1 %not_err138, label %after_check139, label %voiderr140
after_check139:                                   ; preds = %loop.body127
  br label %voiderr140
voiderr140:                                       ; preds = %after_check139, %loop.body127
  %199 = load i64, i64* %.anon124, align 8
  %add141 = add i64 %199, 1
  store i64 %add141, i64* %.anon124, align 8
  br label %loop.cond125
loop.exit142:                                     ; preds = %loop.cond125
  %200 = bitcast [8 x i32]* %a143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %200, i8* align 16 bitcast ([8 x i32]* @.__const.15 to i8*), i32 32, i1 false)
  store i64 0, i64* %.anon144, align 8
  br label %loop.cond145
loop.cond145:                                     ; preds = %voiderr160, %loop.exit142
  %201 = load i64, i64* %.anon144, align 8
  %gt146 = icmp ugt i64 8, %201
  br i1 %gt146, label %loop.body147, label %loop.exit162
loop.body147:                                     ; preds = %loop.cond145
  %202 = load i64, i64* %.anon144, align 8
  store i64 %202, i64* %i148, align 8
  %203 = load i64, i64* %.anon144, align 8
  %204 = getelementptr inbounds [8 x i32], [8 x i32]* %a143, i64 0, i64 %203
  %205 = load i32, i32* %204, align 4
  store i32 %205, i32* %x149, align 4
  store %"char[]" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0), i64 8 }, %"char[]"* %taddr151, align 8
  %206 = bitcast %"char[]"* %taddr151 to { i8*, i64 }*
  %207 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %206, i32 0, i32 0
  %lo152 = load i8*, i8** %207, align 8
  %208 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %206, i32 0, i32 1
  %hi153 = load i64, i64* %208, align 8
  %209 = bitcast i64* %i148 to i8*
  %210 = insertvalue %variant undef, i8* %209, 0
  %211 = insertvalue %variant %210, i64 ptrtoint (%.introspect* @"ct$ulong" to i64), 1
  %212 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots155, i64 0, i64 0
  store %variant %211, %variant* %212, align 16
  %213 = bitcast i32* %x149 to i8*
  %214 = insertvalue %variant undef, i8* %213, 0
  %215 = insertvalue %variant %214, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %216 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots155, i64 0, i64 1
  store %variant %215, %variant* %216, align 16
  %217 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg154, i32 0, i32 1
  store i64 2, i64* %217, align 8
  %218 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg154, i32 0, i32 0
  %219 = bitcast [2 x %variant]* %varargslots155 to %variant*
  store %variant* %219, %variant** %218, align 8
  %220 = bitcast %"variant[]"* %vararg154 to { i8*, i64 }*
  %221 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %220, i32 0, i32 0
  %lo156 = load i8*, i8** %221, align 8
  %222 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %220, i32 0, i32 1
  %hi157 = load i64, i64* %222, align 8
  %223 = call i64 @std_io_printfln(i64* %retparam150, i8* %lo152, i64 %hi153, i8* %lo156, i64 %hi157)
  %not_err158 = icmp eq i64 %223, 0
  br i1 %not_err158, label %after_check159, label %voiderr160
after_check159:                                   ; preds = %loop.body147
  br label %voiderr160
voiderr160:                                       ; preds = %after_check159, %loop.body147
  %224 = load i64, i64* %.anon144, align 8
  %add161 = add i64 %224, 1
  store i64 %add161, i64* %.anon144, align 8
  br label %loop.cond145
loop.exit162:                                     ; preds = %loop.cond145
  %225 = bitcast [7 x i32]* %b to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %225, i8* align 16 bitcast ([7 x i32]* @.__const.17 to i8*), i32 28, i1 false)
  store i64 0, i64* %.anon163, align 8
  br label %loop.cond164
loop.cond164:                                     ; preds = %voiderr179, %loop.exit162
  %226 = load i64, i64* %.anon163, align 8
  %gt165 = icmp ugt i64 7, %226
  br i1 %gt165, label %loop.body166, label %loop.exit181
loop.body166:                                     ; preds = %loop.cond164
  %227 = load i64, i64* %.anon163, align 8
  store i64 %227, i64* %i167, align 8
  %228 = load i64, i64* %.anon163, align 8
  %229 = getelementptr inbounds [7 x i32], [7 x i32]* %b, i64 0, i64 %228
  %230 = load i32, i32* %229, align 4
  store i32 %230, i32* %x168, align 4
  store %"char[]" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i32 0, i32 0), i64 8 }, %"char[]"* %taddr170, align 8
  %231 = bitcast %"char[]"* %taddr170 to { i8*, i64 }*
  %232 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %231, i32 0, i32 0
  %lo171 = load i8*, i8** %232, align 8
  %233 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %231, i32 0, i32 1
  %hi172 = load i64, i64* %233, align 8
  %234 = bitcast i64* %i167 to i8*
  %235 = insertvalue %variant undef, i8* %234, 0
  %236 = insertvalue %variant %235, i64 ptrtoint (%.introspect* @"ct$ulong" to i64), 1
  %237 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots174, i64 0, i64 0
  store %variant %236, %variant* %237, align 16
  %238 = bitcast i32* %x168 to i8*
  %239 = insertvalue %variant undef, i8* %238, 0
  %240 = insertvalue %variant %239, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %241 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots174, i64 0, i64 1
  store %variant %240, %variant* %241, align 16
  %242 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg173, i32 0, i32 1
  store i64 2, i64* %242, align 8
  %243 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg173, i32 0, i32 0
  %244 = bitcast [2 x %variant]* %varargslots174 to %variant*
  store %variant* %244, %variant** %243, align 8
  %245 = bitcast %"variant[]"* %vararg173 to { i8*, i64 }*
  %246 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %245, i32 0, i32 0
  %lo175 = load i8*, i8** %246, align 8
  %247 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %245, i32 0, i32 1
  %hi176 = load i64, i64* %247, align 8
  %248 = call i64 @std_io_printfln(i64* %retparam169, i8* %lo171, i64 %hi172, i8* %lo175, i64 %hi176)
  %not_err177 = icmp eq i64 %248, 0
  br i1 %not_err177, label %after_check178, label %voiderr179
after_check178:                                   ; preds = %loop.body166
  br label %voiderr179
voiderr179:                                       ; preds = %after_check178, %loop.body166
  %249 = load i64, i64* %.anon163, align 8
  %add180 = add i64 %249, 1
  store i64 %add180, i64* %.anon163, align 8
  br label %loop.cond164
loop.exit181:                                     ; preds = %loop.cond164
  %250 = bitcast [8 x i32]* %c to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %250, i8* align 16 bitcast ([8 x i32]* @.__const.19 to i8*), i32 32, i1 false)
  store i64 0, i64* %.anon182, align 8
  br label %loop.cond183
loop.cond183:                                     ; preds = %voiderr198, %loop.exit181
  %251 = load i64, i64* %.anon182, align 8
  %gt184 = icmp ugt i64 8, %251
  br i1 %gt184, label %loop.body185, label %loop.exit200
loop.body185:                                     ; preds = %loop.cond183
  %252 = load i64, i64* %.anon182, align 8
  store i64 %252, i64* %i186, align 8
  %253 = load i64, i64* %.anon182, align 8
  %254 = getelementptr inbounds [8 x i32], [8 x i32]* %c, i64 0, i64 %253
  %255 = load i32, i32* %254, align 4
  store i32 %255, i32* %x187, align 4
  store %"char[]" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i64 9 }, %"char[]"* %taddr189, align 8
  %256 = bitcast %"char[]"* %taddr189 to { i8*, i64 }*
  %257 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %256, i32 0, i32 0
  %lo190 = load i8*, i8** %257, align 8
  %258 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %256, i32 0, i32 1
  %hi191 = load i64, i64* %258, align 8
  %259 = bitcast i64* %i186 to i8*
  %260 = insertvalue %variant undef, i8* %259, 0
  %261 = insertvalue %variant %260, i64 ptrtoint (%.introspect* @"ct$ulong" to i64), 1
  %262 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots193, i64 0, i64 0
  store %variant %261, %variant* %262, align 16
  %263 = bitcast i32* %x187 to i8*
  %264 = insertvalue %variant undef, i8* %263, 0
  %265 = insertvalue %variant %264, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %266 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots193, i64 0, i64 1
  store %variant %265, %variant* %266, align 16
  %267 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg192, i32 0, i32 1
  store i64 2, i64* %267, align 8
  %268 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg192, i32 0, i32 0
  %269 = bitcast [2 x %variant]* %varargslots193 to %variant*
  store %variant* %269, %variant** %268, align 8
  %270 = bitcast %"variant[]"* %vararg192 to { i8*, i64 }*
  %271 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %270, i32 0, i32 0
  %lo194 = load i8*, i8** %271, align 8
  %272 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %270, i32 0, i32 1
  %hi195 = load i64, i64* %272, align 8
  %273 = call i64 @std_io_printfln(i64* %retparam188, i8* %lo190, i64 %hi191, i8* %lo194, i64 %hi195)
  %not_err196 = icmp eq i64 %273, 0
  br i1 %not_err196, label %after_check197, label %voiderr198
after_check197:                                   ; preds = %loop.body185
  br label %voiderr198
voiderr198:                                       ; preds = %after_check197, %loop.body185
  %274 = load i64, i64* %.anon182, align 8
  %add199 = add i64 %274, 1
  store i64 %add199, i64* %.anon182, align 8
  br label %loop.cond183
loop.exit200:                                     ; preds = %loop.cond183
  %275 = bitcast [6 x i32]* %a201 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 16 %275, i8* align 16 bitcast ([6 x i32]* @.__const.21 to i8*), i32 24, i1 false)
  store i64 0, i64* %.anon202, align 8
  br label %loop.cond203
loop.cond203:                                     ; preds = %voiderr218, %loop.exit200
  %276 = load i64, i64* %.anon202, align 8
  %gt204 = icmp ugt i64 6, %276
  br i1 %gt204, label %loop.body205, label %loop.exit220
loop.body205:                                     ; preds = %loop.cond203
  %277 = load i64, i64* %.anon202, align 8
  store i64 %277, i64* %i206, align 8
  %278 = load i64, i64* %.anon202, align 8
  %279 = getelementptr inbounds [6 x i32], [6 x i32]* %a201, i64 0, i64 %278
  %280 = load i32, i32* %279, align 4
  store i32 %280, i32* %x207, align 4
  store %"char[]" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i64 6 }, %"char[]"* %taddr209, align 8
  %281 = bitcast %"char[]"* %taddr209 to { i8*, i64 }*
  %282 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %281, i32 0, i32 0
  %lo210 = load i8*, i8** %282, align 8
  %283 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %281, i32 0, i32 1
  %hi211 = load i64, i64* %283, align 8
  %284 = bitcast i64* %i206 to i8*
  %285 = insertvalue %variant undef, i8* %284, 0
  %286 = insertvalue %variant %285, i64 ptrtoint (%.introspect* @"ct$ulong" to i64), 1
  %287 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots213, i64 0, i64 0
  store %variant %286, %variant* %287, align 16
  %288 = bitcast i32* %x207 to i8*
  %289 = insertvalue %variant undef, i8* %288, 0
  %290 = insertvalue %variant %289, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %291 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots213, i64 0, i64 1
  store %variant %290, %variant* %291, align 16
  %292 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg212, i32 0, i32 1
  store i64 2, i64* %292, align 8
  %293 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg212, i32 0, i32 0
  %294 = bitcast [2 x %variant]* %varargslots213 to %variant*
  store %variant* %294, %variant** %293, align 8
  %295 = bitcast %"variant[]"* %vararg212 to { i8*, i64 }*
  %296 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %295, i32 0, i32 0
  %lo214 = load i8*, i8** %296, align 8
  %297 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %295, i32 0, i32 1
  %hi215 = load i64, i64* %297, align 8
  %298 = call i64 @std_io_printfln(i64* %retparam208, i8* %lo210, i64 %hi211, i8* %lo214, i64 %hi215)
  %not_err216 = icmp eq i64 %298, 0
  br i1 %not_err216, label %after_check217, label %voiderr218
after_check217:                                   ; preds = %loop.body205
  br label %voiderr218
voiderr218:                                       ; preds = %after_check217, %loop.body205
  %299 = load i64, i64* %.anon202, align 8
  %add219 = add i64 %299, 1
  store i64 %add219, i64* %.anon202, align 8
  br label %loop.cond203
loop.exit220:                                     ; preds = %loop.cond203
  ret void
}

