// #target: x64-darwin
macro foo($Foo)
{
    $Foo a;
    return a;
}

define Bar = short;
fn void test()
{
    int x = @foo(int);
    var $Foo = double;
    double d = @foo($Foo);
    double d2 = @foo($typeof(d));
    short z = @foo(Bar);
}


/* #expect: type_params.ll

  %x = alloca i32, align 4
  %a = alloca i32, align 4
  %d = alloca double, align 8
  %a1 = alloca double, align 8
  %d2 = alloca double, align 8
  %a2 = alloca double, align 8
  %z = alloca i16, align 2
  %a3 = alloca i16, align 2
  store i32 0, i32* %a, align 4
  %0 = load i32, i32* %a, align 4
  store i32 %0, i32* %x, align 4
  store double 0.000000e+00, double* %a1, align 8
  %1 = load double, double* %a1, align 8
  store double %1, double* %d, align 8
  store double 0.000000e+00, double* %a2, align 8
  %2 = load double, double* %a2, align 8
  store double %2, double* %d2, align 8
  store i16 0, i16* %a3, align 2
  %3 = load i16, i16* %a3, align 2
  store i16 %3, i16* %z, align 2
  ret void
}
