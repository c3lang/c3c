// #target: macos-x64

module test;

import std::io;

macro @foo(...)
{
	int i = $vaarg(1) + $vaarg(1);
	int j = $vaexpr(2) + $vaexpr(2);
	$for (var $i = 0; $i < $vacount; $i++):
		io::printfln("%d", $vaarg($i));
	$endfor;
}

macro foo2(...)
{
	$for (var $i = 0; $i < $vacount; $i++):
		{
			$vatype($i) x;
		}
		io::printfln("%s", $vatype($i).nameof);
	$endfor;
}

macro foo3(...)
{
	var $x = 0;
	$for (var $i = 0; $i < $vacount; $i++):
		$x += $vaconst($i);
	$endfor;
	return $x;
}

macro @foo4(...)
{
	$typeof($varef(0)) a = $varef(0);
	$varef(0) = $varef(1);
	$varef(1) = a;
}
fn int ping(int val)
{
	io::printfln("Ping[%d]", val);
	return val;
}

fn void main()
{
	@foo(ping(1), ping(-1), ping(3141), ping(999 + 1));
	foo2(int, double);
	var $x = foo3(1, 4, 100);
	io::printfln("%d", $x);
	int x = 123;
	int y = 33;
	@foo4(x, y);
	io::printfln("%d, %d", x, y);
	@foo4(x, y);
	io::printfln("%d, %d", x, y);
}

/* #expect: test.ll

define i32 @test_ping(i32 %0) #0 {
entry:
  %retparam = alloca i64, align 8
  %taddr = alloca %"char[]", align 8
  %vararg = alloca %"variant[]", align 8
  %varargslots = alloca [1 x %variant], align 16
  %taddr1 = alloca i32, align 4
  store %"char[]" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i64 8 }, %"char[]"* %taddr, align 8
  %1 = bitcast %"char[]"* %taddr to { i8*, i64 }*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0
  %lo = load i8*, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1
  %hi = load i64, i64* %3, align 8
  store i32 %0, i32* %taddr1, align 4
  %4 = bitcast i32* %taddr1 to i8*
  %5 = insertvalue %variant undef, i8* %4, 0
  %6 = insertvalue %variant %5, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %7 = getelementptr inbounds [1 x %variant], [1 x %variant]* %varargslots, i64 0, i64 0
  store %variant %6, %variant* %7, align 16
  %8 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg, i32 0, i32 1
  store i64 1, i64* %8, align 8
  %9 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg, i32 0, i32 0
  %10 = bitcast [1 x %variant]* %varargslots to %variant*
  store %variant* %10, %variant** %9, align 8
  %11 = bitcast %"variant[]"* %vararg to { i8*, i64 }*
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 0
  %lo2 = load i8*, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %11, i32 0, i32 1
  %hi3 = load i64, i64* %13, align 8
  %14 = call i64 @std_io_printfln(i64* %retparam, i8* %lo, i64 %hi, i8* %lo2, i64 %hi3)
  %not_err = icmp eq i64 %14, 0
  br i1 %not_err, label %after_check, label %voiderr

after_check:                                      ; preds = %entry
  br label %voiderr

voiderr:                                          ; preds = %after_check, %entry
  ret i32 %0
}

define void @test_main() #0 {
entry:
  %.anon = alloca i32, align 4
  %.anon1 = alloca i32, align 4
  %.anon2 = alloca i32, align 4
  %.anon3 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %retparam = alloca i64, align 8
  %taddr = alloca %"char[]", align 8
  %vararg = alloca %"variant[]", align 8
  %varargslots = alloca [1 x %variant], align 16
  %retparam7 = alloca i64, align 8
  %taddr8 = alloca %"char[]", align 8
  %vararg11 = alloca %"variant[]", align 8
  %varargslots12 = alloca [1 x %variant], align 16
  %retparam18 = alloca i64, align 8
  %taddr19 = alloca %"char[]", align 8
  %vararg22 = alloca %"variant[]", align 8
  %varargslots23 = alloca [1 x %variant], align 16
  %retparam29 = alloca i64, align 8
  %taddr30 = alloca %"char[]", align 8
  %vararg33 = alloca %"variant[]", align 8
  %varargslots34 = alloca [1 x %variant], align 16
  %x = alloca i32, align 4
  %retparam40 = alloca i64, align 8
  %taddr41 = alloca %"char[]", align 8
  %vararg44 = alloca %"variant[]", align 8
  %varargslots45 = alloca [1 x %variant], align 16
  %taddr46 = alloca [3 x i8]*, align 8
  %x52 = alloca double, align 8
  %retparam53 = alloca i64, align 8
  %taddr54 = alloca %"char[]", align 8
  %vararg57 = alloca %"variant[]", align 8
  %varargslots58 = alloca [1 x %variant], align 16
  %taddr59 = alloca [6 x i8]*, align 8
  %retparam65 = alloca i64, align 8
  %taddr66 = alloca %"char[]", align 8
  %vararg69 = alloca %"variant[]", align 8
  %varargslots70 = alloca [1 x %variant], align 16
  %taddr71 = alloca i32, align 4
  %x77 = alloca i32, align 4
  %y = alloca i32, align 4
  %a = alloca i32, align 4
  %retparam78 = alloca i64, align 8
  %taddr79 = alloca %"char[]", align 8
  %vararg82 = alloca %"variant[]", align 8
  %varargslots83 = alloca [2 x %variant], align 16
  %a89 = alloca i32, align 4
  %retparam90 = alloca i64, align 8
  %taddr91 = alloca %"char[]", align 8
  %vararg94 = alloca %"variant[]", align 8
  %varargslots95 = alloca [2 x %variant], align 16
  %0 = call i32 @test_ping(i32 -1)
  store i32 %0, i32* %.anon, align 4
  %1 = call i32 @test_ping(i32 1)
  store i32 %1, i32* %.anon1, align 4
  %2 = call i32 @test_ping(i32 3141)
  store i32 %2, i32* %.anon2, align 4
  %3 = call i32 @test_ping(i32 1000)
  store i32 %3, i32* %.anon3, align 4
  %4 = load i32, i32* %.anon, align 4
  %5 = load i32, i32* %.anon, align 4
  %add = add i32 %4, %5
  store i32 %add, i32* %i, align 4
  %6 = call i32 @test_ping(i32 3141)
  %7 = call i32 @test_ping(i32 3141)
  %add4 = add i32 %6, %7
  store i32 %add4, i32* %j, align 4
  store %"char[]" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i64 2 }, %"char[]"* %taddr, align 8
  %8 = bitcast %"char[]"* %taddr to { i8*, i64 }*
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 0
  %lo = load i8*, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 1
  %hi = load i64, i64* %10, align 8
  %11 = bitcast i32* %.anon1 to i8*
  %12 = insertvalue %variant undef, i8* %11, 0
  %13 = insertvalue %variant %12, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %14 = getelementptr inbounds [1 x %variant], [1 x %variant]* %varargslots, i64 0, i64 0
  store %variant %13, %variant* %14, align 16
  %15 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg, i32 0, i32 1
  store i64 1, i64* %15, align 8
  %16 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg, i32 0, i32 0
  %17 = bitcast [1 x %variant]* %varargslots to %variant*
  store %variant* %17, %variant** %16, align 8
  %18 = bitcast %"variant[]"* %vararg to { i8*, i64 }*
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %18, i32 0, i32 0
  %lo5 = load i8*, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %18, i32 0, i32 1
  %hi6 = load i64, i64* %20, align 8
  %21 = call i64 @std_io_printfln(i64* %retparam, i8* %lo, i64 %hi, i8* %lo5, i64 %hi6)
  %not_err = icmp eq i64 %21, 0
  br i1 %not_err, label %after_check, label %voiderr

after_check:                                      ; preds = %entry
  br label %voiderr

voiderr:                                          ; preds = %after_check, %entry
  store %"char[]" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i64 2 }, %"char[]"* %taddr8, align 8
  %22 = bitcast %"char[]"* %taddr8 to { i8*, i64 }*
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %22, i32 0, i32 0
  %lo9 = load i8*, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %22, i32 0, i32 1
  %hi10 = load i64, i64* %24, align 8
  %25 = bitcast i32* %.anon to i8*
  %26 = insertvalue %variant undef, i8* %25, 0
  %27 = insertvalue %variant %26, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %28 = getelementptr inbounds [1 x %variant], [1 x %variant]* %varargslots12, i64 0, i64 0
  store %variant %27, %variant* %28, align 16
  %29 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg11, i32 0, i32 1
  store i64 1, i64* %29, align 8
  %30 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg11, i32 0, i32 0
  %31 = bitcast [1 x %variant]* %varargslots12 to %variant*
  store %variant* %31, %variant** %30, align 8
  %32 = bitcast %"variant[]"* %vararg11 to { i8*, i64 }*
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %32, i32 0, i32 0
  %lo13 = load i8*, i8** %33, align 8
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %32, i32 0, i32 1
  %hi14 = load i64, i64* %34, align 8
  %35 = call i64 @std_io_printfln(i64* %retparam7, i8* %lo9, i64 %hi10, i8* %lo13, i64 %hi14)
  %not_err15 = icmp eq i64 %35, 0
  br i1 %not_err15, label %after_check16, label %voiderr17

after_check16:                                    ; preds = %voiderr
  br label %voiderr17

voiderr17:                                        ; preds = %after_check16, %voiderr
  store %"char[]" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i64 2 }, %"char[]"* %taddr19, align 8
  %36 = bitcast %"char[]"* %taddr19 to { i8*, i64 }*
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %36, i32 0, i32 0
  %lo20 = load i8*, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %36, i32 0, i32 1
  %hi21 = load i64, i64* %38, align 8
  %39 = bitcast i32* %.anon2 to i8*
  %40 = insertvalue %variant undef, i8* %39, 0
  %41 = insertvalue %variant %40, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %42 = getelementptr inbounds [1 x %variant], [1 x %variant]* %varargslots23, i64 0, i64 0
  store %variant %41, %variant* %42, align 16
  %43 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg22, i32 0, i32 1
  store i64 1, i64* %43, align 8
  %44 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg22, i32 0, i32 0
  %45 = bitcast [1 x %variant]* %varargslots23 to %variant*
  store %variant* %45, %variant** %44, align 8
  %46 = bitcast %"variant[]"* %vararg22 to { i8*, i64 }*
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 0
  %lo24 = load i8*, i8** %47, align 8
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 1
  %hi25 = load i64, i64* %48, align 8
  %49 = call i64 @std_io_printfln(i64* %retparam18, i8* %lo20, i64 %hi21, i8* %lo24, i64 %hi25)
  %not_err26 = icmp eq i64 %49, 0
  br i1 %not_err26, label %after_check27, label %voiderr28

after_check27:                                    ; preds = %voiderr17
  br label %voiderr28

voiderr28:                                        ; preds = %after_check27, %voiderr17
  store %"char[]" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0), i64 2 }, %"char[]"* %taddr30, align 8
  %50 = bitcast %"char[]"* %taddr30 to { i8*, i64 }*
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %50, i32 0, i32 0
  %lo31 = load i8*, i8** %51, align 8
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %50, i32 0, i32 1
  %hi32 = load i64, i64* %52, align 8
  %53 = bitcast i32* %.anon3 to i8*
  %54 = insertvalue %variant undef, i8* %53, 0
  %55 = insertvalue %variant %54, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %56 = getelementptr inbounds [1 x %variant], [1 x %variant]* %varargslots34, i64 0, i64 0
  store %variant %55, %variant* %56, align 16
  %57 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg33, i32 0, i32 1
  store i64 1, i64* %57, align 8
  %58 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg33, i32 0, i32 0
  %59 = bitcast [1 x %variant]* %varargslots34 to %variant*
  store %variant* %59, %variant** %58, align 8
  %60 = bitcast %"variant[]"* %vararg33 to { i8*, i64 }*
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %60, i32 0, i32 0
  %lo35 = load i8*, i8** %61, align 8
  %62 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %60, i32 0, i32 1
  %hi36 = load i64, i64* %62, align 8
  %63 = call i64 @std_io_printfln(i64* %retparam29, i8* %lo31, i64 %hi32, i8* %lo35, i64 %hi36)
  %not_err37 = icmp eq i64 %63, 0
  br i1 %not_err37, label %after_check38, label %voiderr39

after_check38:                                    ; preds = %voiderr28
  br label %voiderr39

voiderr39:                                        ; preds = %after_check38, %voiderr28
  store i32 0, i32* %x, align 4
  store %"char[]" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i64 2 }, %"char[]"* %taddr41, align 8
  %64 = bitcast %"char[]"* %taddr41 to { i8*, i64 }*
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %64, i32 0, i32 0
  %lo42 = load i8*, i8** %65, align 8
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %64, i32 0, i32 1
  %hi43 = load i64, i64* %66, align 8
  store [3 x i8]* bitcast ([4 x i8]* @.str.6 to [3 x i8]*), [3 x i8]** %taddr46, align 8
  %67 = bitcast [3 x i8]** %taddr46 to i8*
  %68 = insertvalue %variant undef, i8* %67, 0
  %69 = insertvalue %variant %68, i64 ptrtoint (%.introspect* @"ct$p$a3$char" to i64), 1
  %70 = getelementptr inbounds [1 x %variant], [1 x %variant]* %varargslots45, i64 0, i64 0
  store %variant %69, %variant* %70, align 16
  %71 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg44, i32 0, i32 1
  store i64 1, i64* %71, align 8
  %72 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg44, i32 0, i32 0
  %73 = bitcast [1 x %variant]* %varargslots45 to %variant*
  store %variant* %73, %variant** %72, align 8
  %74 = bitcast %"variant[]"* %vararg44 to { i8*, i64 }*
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %74, i32 0, i32 0
  %lo47 = load i8*, i8** %75, align 8
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %74, i32 0, i32 1
  %hi48 = load i64, i64* %76, align 8
  %77 = call i64 @std_io_printfln(i64* %retparam40, i8* %lo42, i64 %hi43, i8* %lo47, i64 %hi48)
  %not_err49 = icmp eq i64 %77, 0
  br i1 %not_err49, label %after_check50, label %voiderr51

after_check50:                                    ; preds = %voiderr39
  br label %voiderr51

voiderr51:                                        ; preds = %after_check50, %voiderr39
  store double 0.000000e+00, double* %x52, align 8
  store %"char[]" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0), i64 2 }, %"char[]"* %taddr54, align 8
  %78 = bitcast %"char[]"* %taddr54 to { i8*, i64 }*
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %78, i32 0, i32 0
  %lo55 = load i8*, i8** %79, align 8
  %80 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %78, i32 0, i32 1
  %hi56 = load i64, i64* %80, align 8
  store [6 x i8]* bitcast ([7 x i8]* @.str.8 to [6 x i8]*), [6 x i8]** %taddr59, align 8
  %81 = bitcast [6 x i8]** %taddr59 to i8*
  %82 = insertvalue %variant undef, i8* %81, 0
  %83 = insertvalue %variant %82, i64 ptrtoint (%.introspect* @"ct$p$a6$char" to i64), 1
  %84 = getelementptr inbounds [1 x %variant], [1 x %variant]* %varargslots58, i64 0, i64 0
  store %variant %83, %variant* %84, align 16
  %85 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg57, i32 0, i32 1
  store i64 1, i64* %85, align 8
  %86 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg57, i32 0, i32 0
  %87 = bitcast [1 x %variant]* %varargslots58 to %variant*
  store %variant* %87, %variant** %86, align 8
  %88 = bitcast %"variant[]"* %vararg57 to { i8*, i64 }*
  %89 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %88, i32 0, i32 0
  %lo60 = load i8*, i8** %89, align 8
  %90 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %88, i32 0, i32 1
  %hi61 = load i64, i64* %90, align 8
  %91 = call i64 @std_io_printfln(i64* %retparam53, i8* %lo55, i64 %hi56, i8* %lo60, i64 %hi61)
  %not_err62 = icmp eq i64 %91, 0
  br i1 %not_err62, label %after_check63, label %voiderr64

after_check63:                                    ; preds = %voiderr51
  br label %voiderr64

voiderr64:                                        ; preds = %after_check63, %voiderr51
  store %"char[]" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0), i64 2 }, %"char[]"* %taddr66, align 8
  %92 = bitcast %"char[]"* %taddr66 to { i8*, i64 }*
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %92, i32 0, i32 0
  %lo67 = load i8*, i8** %93, align 8
  %94 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %92, i32 0, i32 1
  %hi68 = load i64, i64* %94, align 8
  store i32 105, i32* %taddr71, align 4
  %95 = bitcast i32* %taddr71 to i8*
  %96 = insertvalue %variant undef, i8* %95, 0
  %97 = insertvalue %variant %96, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %98 = getelementptr inbounds [1 x %variant], [1 x %variant]* %varargslots70, i64 0, i64 0
  store %variant %97, %variant* %98, align 16
  %99 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg69, i32 0, i32 1
  store i64 1, i64* %99, align 8
  %100 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg69, i32 0, i32 0
  %101 = bitcast [1 x %variant]* %varargslots70 to %variant*
  store %variant* %101, %variant** %100, align 8
  %102 = bitcast %"variant[]"* %vararg69 to { i8*, i64 }*
  %103 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %102, i32 0, i32 0
  %lo72 = load i8*, i8** %103, align 8
  %104 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %102, i32 0, i32 1
  %hi73 = load i64, i64* %104, align 8
  %105 = call i64 @std_io_printfln(i64* %retparam65, i8* %lo67, i64 %hi68, i8* %lo72, i64 %hi73)
  %not_err74 = icmp eq i64 %105, 0
  br i1 %not_err74, label %after_check75, label %voiderr76

after_check75:                                    ; preds = %voiderr64
  br label %voiderr76

voiderr76:                                        ; preds = %after_check75, %voiderr64
  store i32 123, i32* %x77, align 4
  store i32 33, i32* %y, align 4
  %106 = load i32, i32* %x77, align 4
  store i32 %106, i32* %a, align 4
  %107 = load i32, i32* %y, align 4
  store i32 %107, i32* %x77, align 4
  %108 = load i32, i32* %a, align 4
  store i32 %108, i32* %y, align 4
  store %"char[]" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i64 6 }, %"char[]"* %taddr79, align 8
  %109 = bitcast %"char[]"* %taddr79 to { i8*, i64 }*
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %109, i32 0, i32 0
  %lo80 = load i8*, i8** %110, align 8
  %111 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %109, i32 0, i32 1
  %hi81 = load i64, i64* %111, align 8
  %112 = bitcast i32* %x77 to i8*
  %113 = insertvalue %variant undef, i8* %112, 0
  %114 = insertvalue %variant %113, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %115 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots83, i64 0, i64 0
  store %variant %114, %variant* %115, align 16
  %116 = bitcast i32* %y to i8*
  %117 = insertvalue %variant undef, i8* %116, 0
  %118 = insertvalue %variant %117, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %119 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots83, i64 0, i64 1
  store %variant %118, %variant* %119, align 16
  %120 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg82, i32 0, i32 1
  store i64 2, i64* %120, align 8
  %121 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg82, i32 0, i32 0
  %122 = bitcast [2 x %variant]* %varargslots83 to %variant*
  store %variant* %122, %variant** %121, align 8
  %123 = bitcast %"variant[]"* %vararg82 to { i8*, i64 }*
  %124 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %123, i32 0, i32 0
  %lo84 = load i8*, i8** %124, align 8
  %125 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %123, i32 0, i32 1
  %hi85 = load i64, i64* %125, align 8
  %126 = call i64 @std_io_printfln(i64* %retparam78, i8* %lo80, i64 %hi81, i8* %lo84, i64 %hi85)
  %not_err86 = icmp eq i64 %126, 0
  br i1 %not_err86, label %after_check87, label %voiderr88

after_check87:                                    ; preds = %voiderr76
  br label %voiderr88

voiderr88:                                        ; preds = %after_check87, %voiderr76
  %127 = load i32, i32* %x77, align 4
  store i32 %127, i32* %a89, align 4
  %128 = load i32, i32* %y, align 4
  store i32 %128, i32* %x77, align 4
  %129 = load i32, i32* %a89, align 4
  store i32 %129, i32* %y, align 4
  store %"char[]" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i64 6 }, %"char[]"* %taddr91, align 8
  %130 = bitcast %"char[]"* %taddr91 to { i8*, i64 }*
  %131 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %130, i32 0, i32 0
  %lo92 = load i8*, i8** %131, align 8
  %132 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %130, i32 0, i32 1
  %hi93 = load i64, i64* %132, align 8
  %133 = bitcast i32* %x77 to i8*
  %134 = insertvalue %variant undef, i8* %133, 0
  %135 = insertvalue %variant %134, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %136 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots95, i64 0, i64 0
  store %variant %135, %variant* %136, align 16
  %137 = bitcast i32* %y to i8*
  %138 = insertvalue %variant undef, i8* %137, 0
  %139 = insertvalue %variant %138, i64 ptrtoint (%.introspect* @"ct$int" to i64), 1
  %140 = getelementptr inbounds [2 x %variant], [2 x %variant]* %varargslots95, i64 0, i64 1
  store %variant %139, %variant* %140, align 16
  %141 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg94, i32 0, i32 1
  store i64 2, i64* %141, align 8
  %142 = getelementptr inbounds %"variant[]", %"variant[]"* %vararg94, i32 0, i32 0
  %143 = bitcast [2 x %variant]* %varargslots95 to %variant*
  store %variant* %143, %variant** %142, align 8
  %144 = bitcast %"variant[]"* %vararg94 to { i8*, i64 }*
  %145 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %144, i32 0, i32 0
  %lo96 = load i8*, i8** %145, align 8
  %146 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %144, i32 0, i32 1
  %hi97 = load i64, i64* %146, align 8
  %147 = call i64 @std_io_printfln(i64* %retparam90, i8* %lo92, i64 %hi93, i8* %lo96, i64 %hi97)
  %not_err98 = icmp eq i64 %147, 0
  br i1 %not_err98, label %after_check99, label %voiderr100

after_check99:                                    ; preds = %voiderr88
  br label %voiderr100

voiderr100:                                       ; preds = %after_check99, %voiderr88
  ret void
}
