fault MyError
{
    FOO,
    BAR
}
fn void! errorThing()
{
    return MyError.BAR!;
}

fn void! errorThing2()
{
    return;
}

extern fn void printf(char*, ...);
fn void main()
{
    anyerr z = errorThing();
    printf("Z;   %llx\n", (iptr)(z));
    printf("BAR: %llx\n", (iptr)(MyError.BAR));
    printf("FOO: %llx\n", (iptr)(MyError.FOO));
    z = errorThing2();
    printf("Z2:  %llx\n", (iptr)(z));
}

/* #expect: anyerr_void.ll

define i64 @anyerr_void_errorThing() #0 {
entry:
  ret i64 ptrtoint (ptr @"anyerr_void_MyError$BAR" to i64)
}

; Function Attrs: nounwind
define i64 @anyerr_void_errorThing2() #0 {
entry:
  %reterr = alloca i64, align 8
  ret i64 0
}

; Function Attrs: nounwind
declare void @printf(ptr, ...) #0

; Function Attrs: nounwind
define void @anyerr_void_main() #0 {
entry:
  %z = alloca i64, align 8
  %error_var = alloca i64, align 8
  %error_var1 = alloca i64, align 8
  store i64 0, ptr %error_var, align 8
  %0 = call i64 @anyerr_void_errorThing()
  %not_err = icmp eq i64 %0, 0
  br i1 %not_err, label %after_check, label %assign_optional

assign_optional:                                  ; preds = %entry
  store i64 %0, ptr %error_var, align 8
  br label %noerr_block

after_check:                                      ; preds = %entry
  br label %noerr_block

noerr_block:                                      ; preds = %after_check, %assign_optional
  %1 = load i64, ptr %error_var, align 8
  store i64 %1, ptr %z, align 8
  %2 = load i64, ptr %z, align 8
  call void (ptr, ...) @printf(ptr @.str, i64 %2)
  call void (ptr, ...) @printf(ptr @.str.2, i64 ptrtoint (ptr @"anyerr_void_MyError$BAR" to i64))
  call void (ptr, ...) @printf(ptr @.str.3, i64 ptrtoint (ptr @"anyerr_void_MyError$FOO" to i64))
  store i64 0, ptr %error_var1, align 8
  %3 = call i64 @anyerr_void_errorThing2()
  %not_err2 = icmp eq i64 %3, 0
  br i1 %not_err2, label %after_check4, label %assign_optional3

assign_optional3:                                 ; preds = %noerr_block
  store i64 %3, ptr %error_var1, align 8
  br label %noerr_block5

after_check4:                                     ; preds = %noerr_block
  br label %noerr_block5

noerr_block5:                                     ; preds = %after_check4, %assign_optional3
  %4 = load i64, ptr %error_var1, align 8
  store i64 %4, ptr %z, align 8
  %5 = load i64, ptr %z, align 8
  call void (ptr, ...) @printf(ptr @.str.4, i64 %5)
  ret void
}