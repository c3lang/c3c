// #safe: yes
// #target: macos-x64
module test;
enum Abc : char { ABC }

fn void main()
{
	int a;
	Abc x = (Abc)a;
	long z;
	Abc y = (Abc)z;
	a = 256;
	y = (Abc)a;
	a = -1;
	y = (Abc)a;
}

/* #expect: test.ll

define void @test.main() #0 {
entry:
  %a = alloca i32, align 4
  %x = alloca i8, align 1
  %z = alloca i64, align 8
  %y = alloca i8, align 1
  store i32 0, ptr %a, align 4
  %0 = load i32, ptr %a, align 4
  %lt = icmp slt i32 %0, 0
  br i1 %lt, label %panic, label %checkok
panic:                                            ; preds = %entry
  store i32 %0, ptr %taddr, align 4
  %1 = insertvalue %any undef, ptr %taddr, 0
  %2 = insertvalue %any %1, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %3 = getelementptr inbounds [1 x %any], ptr %varargslots, i64 0, i64 0
  store %any %2, ptr %3, align 16
  %4 = insertvalue %"any[]" undef, ptr %varargslots, 0
  %5 = insertvalue %"any[]" %4, i64 1, 1
  store %"any[]" %5, ptr %indirectarg, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg, i64 7, ptr @.file, i64 19, ptr @.func, i64 4, i32 7, ptr byval(%"any[]") align 8 %indirectarg)
  br label %checkok
checkok:                                          ; preds = %panic, %entry
  %ge = icmp sge i32 %0, 1
  br i1 %ge, label %panic1, label %checkok5
panic1:                                           ; preds = %checkok
  store i32 %0, ptr %taddr2, align 4
  %6 = insertvalue %any undef, ptr %taddr2, 0
  %7 = insertvalue %any %6, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %8 = getelementptr inbounds [1 x %any], ptr %varargslots3, i64 0, i64 0
  store %any %7, ptr %8, align 16
  %9 = insertvalue %"any[]" undef, ptr %varargslots3, 0
  %10 = insertvalue %"any[]" %9, i64 1, 1
  store %"any[]" %10, ptr %indirectarg4, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg.1, i64 87, ptr @.file, i64 19, ptr @.func, i64 4, i32 7, ptr byval(%"any[]") align 8 %indirectarg4)
  br label %checkok5
checkok5:                                         ; preds = %panic1, %checkok
  %trunc = trunc i32 %0 to i8
  store i8 %trunc, ptr %x, align 1
  store i64 0, ptr %z, align 8
  %11 = load i64, ptr %z, align 8
  %lt6 = icmp slt i64 %11, 0
  br i1 %lt6, label %panic7, label %checkok11
panic7:                                           ; preds = %checkok5
  store i64 %11, ptr %taddr8, align 8
  %12 = insertvalue %any undef, ptr %taddr8, 0
  %13 = insertvalue %any %12, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  %14 = getelementptr inbounds [1 x %any], ptr %varargslots9, i64 0, i64 0
  store %any %13, ptr %14, align 16
  %15 = insertvalue %"any[]" undef, ptr %varargslots9, 0
  %16 = insertvalue %"any[]" %15, i64 1, 1
  store %"any[]" %16, ptr %indirectarg10, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg.2, i64 8, ptr @.file, i64 19, ptr @.func, i64 4, i32 9, ptr byval(%"any[]") align 8 %indirectarg10)
  br label %checkok11
checkok11:                                        ; preds = %panic7, %checkok5
  %ge12 = icmp sge i64 %11, 1
  br i1 %ge12, label %panic13, label %checkok17
panic13:                                          ; preds = %checkok11
  store i64 %11, ptr %taddr14, align 8
  %17 = insertvalue %any undef, ptr %taddr14, 0
  %18 = insertvalue %any %17, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  %19 = getelementptr inbounds [1 x %any], ptr %varargslots15, i64 0, i64 0
  store %any %18, ptr %19, align 16
  %20 = insertvalue %"any[]" undef, ptr %varargslots15, 0
  %21 = insertvalue %"any[]" %20, i64 1, 1
  store %"any[]" %21, ptr %indirectarg16, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg.1, i64 87, ptr @.file, i64 19, ptr @.func, i64 4, i32 9, ptr byval(%"any[]") align 8 %indirectarg16)
  br label %checkok17
checkok17:                                        ; preds = %panic13, %checkok11
  %trunc18 = trunc i64 %11 to i8
  store i8 %trunc18, ptr %y, align 1
  store i32 256, ptr %a, align 4
  %22 = load i32, ptr %a, align 4
  %lt19 = icmp slt i32 %22, 0
  br i1 %lt19, label %panic20, label %checkok24
panic20:                                          ; preds = %checkok17
  store i32 %22, ptr %taddr21, align 4
  %23 = insertvalue %any undef, ptr %taddr21, 0
  %24 = insertvalue %any %23, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %25 = getelementptr inbounds [1 x %any], ptr %varargslots22, i64 0, i64 0
  store %any %24, ptr %25, align 16
  %26 = insertvalue %"any[]" undef, ptr %varargslots22, 0
  %27 = insertvalue %"any[]" %26, i64 1, 1
  store %"any[]" %27, ptr %indirectarg23, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg.3, i64 62, ptr @.file, i64 19, ptr @.func, i64 4, i32 11, ptr byval(%"any[]") align 8 %indirectarg23)
  br label %checkok24
checkok24:                                        ; preds = %panic20, %checkok17
  %ge25 = icmp sge i32 %22, 1
  br i1 %ge25, label %panic26, label %checkok30
panic26:                                          ; preds = %checkok24
  store i32 %22, ptr %taddr27, align 4
  %28 = insertvalue %any undef, ptr %taddr27, 0
  %29 = insertvalue %any %28, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %30 = getelementptr inbounds [1 x %any], ptr %varargslots28, i64 0, i64 0
  store %any %29, ptr %30, align 16
  %31 = insertvalue %"any[]" undef, ptr %varargslots28, 0
  %32 = insertvalue %"any[]" %31, i64 1, 1
  store %"any[]" %32, ptr %indirectarg29, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg.1, i64 87, ptr @.file, i64 19, ptr @.func, i64 4, i32 11, ptr byval(%"any[]") align 8 %indirectarg29)
  br label %checkok30
checkok30:                                        ; preds = %panic26, %checkok24
  %trunc31 = trunc i32 %22 to i8
  store i8 %trunc31, ptr %y, align 1
  store i32 -1, ptr %a, align 4
  %33 = load i32, ptr %a, align 4
  %lt32 = icmp slt i32 %33, 0
  br i1 %lt32, label %panic33, label %checkok37
panic33:                                          ; preds = %checkok30
  store i32 %33, ptr %taddr34, align 4
  %34 = insertvalue %any undef, ptr %taddr34, 0
  %35 = insertvalue %any %34, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %36 = getelementptr inbounds [1 x %any], ptr %varargslots35, i64 0, i64 0
  store %any %35, ptr %36, align 16
  %37 = insertvalue %"any[]" undef, ptr %varargslots35, 0
  %38 = insertvalue %"any[]" %37, i64 1, 1
  store %"any[]" %38, ptr %indirectarg36, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg.3, i64 62, ptr @.file, i64 19, ptr @.func, i64 4, i32 13, ptr byval(%"any[]") align 8 %indirectarg36)
  br label %checkok37
checkok37:                                        ; preds = %panic33, %checkok30
  %ge38 = icmp sge i32 %33, 1
  br i1 %ge38, label %panic39, label %checkok43
panic39:                                          ; preds = %checkok37
  store i32 %33, ptr %taddr40, align 4
  %39 = insertvalue %any undef, ptr %taddr40, 0
  %40 = insertvalue %any %39, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %41 = getelementptr inbounds [1 x %any], ptr %varargslots41, i64 0, i64 0
  store %any %40, ptr %41, align 16
  %42 = insertvalue %"any[]" undef, ptr %varargslots41, 0
  %43 = insertvalue %"any[]" %42, i64 1, 1
  store %"any[]" %43, ptr %indirectarg42, align 8
  call void @std.core.builtin.panicf(ptr @.panic_msg.1, i64 87, ptr @.file, i64 19, ptr @.func, i64 4, i32 13, ptr byval(%"any[]") align 8 %indirectarg42)
  br label %checkok43
checkok43:                                        ; preds = %panic39, %checkok37
  %trunc44 = trunc i32 %33 to i8
  store i8 %trunc44, ptr %y, align 1
  ret void
}
