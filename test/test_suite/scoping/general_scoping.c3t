module test;
extern fn void printf(char*, ...);

struct Foo
{
    struct goo
    {
        int* z;
    }
}

Foo bob;
fn void main()
{
    int y = 7;
    bob.goo.z = &y;
    int x = 1;
    scoping (x, *bob.goo.z)
    {
        x = 3;
        *bob.goo.z = 12;
        printf("%d %d\n", x, *bob.goo.z);
    }
    printf("%d %d\n", x, *bob.goo.z);
}

/* #expect: test.ll

%Foo = type { %goo }
%goo = type { i32* }

@goo = linkonce_odr constant i8 1
@Foo = linkonce_odr constant i8 1
@test.bob = global %Foo zeroinitializer, align 8
@.str = private constant [7 x i8] c"%d %d\0A\00", align 1
@.str.1 = private constant [7 x i8] c"%d %d\0A\00", align 1

; Function Attrs: nounwind
declare void @printf(i8*, ...) #0

; Function Attrs: nounwind
define void @test.main() #0 {
entry:
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  %.scope = alloca i32, align 4
  %.scope1 = alloca i32, align 4
  store i32 7, i32* %y, align 4
  store i32* %y, i32** getelementptr inbounds (%Foo, %Foo* @test.bob, i32 0, i32 0, i32 0), align 8
  store i32 1, i32* %x, align 4
  %0 = load i32, i32* %x, align 4
  store i32 %0, i32* %.scope, align 4
  %1 = load i32*, i32** getelementptr inbounds (%Foo, %Foo* @test.bob, i32 0, i32 0, i32 0), align 8
  %2 = load i32, i32* %1, align 8
  store i32 %2, i32* %.scope1, align 4
  store i32 3, i32* %x, align 4
  %3 = load i32*, i32** getelementptr inbounds (%Foo, %Foo* @test.bob, i32 0, i32 0, i32 0), align 8
  store i32 12, i32* %3, align 8
  %4 = load i32, i32* %x, align 4
  %5 = load i32*, i32** getelementptr inbounds (%Foo, %Foo* @test.bob, i32 0, i32 0, i32 0), align 8
  %6 = load i32, i32* %5, align 8
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i32 %4, i32 %6)
  %7 = load i32*, i32** getelementptr inbounds (%Foo, %Foo* @test.bob, i32 0, i32 0, i32 0), align 8
  %8 = load i32, i32* %.scope1, align 4
  store i32 %8, i32* %7, align 8
  br label %exit

exit:                                             ; preds = %entry
  %9 = load i32, i32* %.scope, align 4
  store i32 %9, i32* %x, align 4
  br label %exit2

exit2:                                            ; preds = %exit
  %10 = load i32, i32* %x, align 4
  %11 = load i32*, i32** getelementptr inbounds (%Foo, %Foo* @test.bob, i32 0, i32 0, i32 0), align 8
  %12 = load i32, i32* %11, align 8
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32 %10, i32 %12)
  ret void
}
