// #target: macos-x64
module structo;

struct Foo
{
    int foo;
    long bar;
}

usz x @private = Foo.sizeof;

Foo foo1 @private = { 1, 2 };
Foo foo2 @private = { .foo = 2 };
Foo foo3 @private = { .bar = 3 };
Foo foo4 @private = { .bar = 4, .foo = 4, .bar = 1 };
Foo foo5 @private = {};
Foo foo6 @private;
const Foo FOO7 @private = { 1, 2 };
Foo foo8 @private = FOO7;

/* #expect: structo.ll

@"$ct.structo.Foo" = linkonce global %.introspect { i8 10, i64 0, ptr null, i64 16, i64 0, i64 2, [0 x i64] zeroinitializer }, align 8
@structo.x = protected unnamed_addr global i64 16, align 8
@structo.foo1 = protected unnamed_addr global %Foo { i32 1, i64 2 }, align 8
@structo.foo2 = protected unnamed_addr global %Foo { i32 2, i64 0 }, align 8
@structo.foo3 = protected unnamed_addr global %Foo { i32 0, i64 3 }, align 8
@structo.foo4 = protected unnamed_addr global %Foo { i32 4, i64 1 }, align 8
@structo.foo5 = protected unnamed_addr global %Foo zeroinitializer, align 8
@structo.foo6 = protected unnamed_addr global %Foo zeroinitializer, align 8
@structo.FOO7 = protected unnamed_addr constant %Foo { i32 1, i64 2 }, align 8
@structo.foo8 = protected unnamed_addr global %Foo { i32 1, i64 2 }, align 8
