// #target: macos-x64
module test;

struct Point
{
    int x;
    int y;
}

fn void test1()
{
    Point p = { 5, 6 };
}

/* #expect: test.ll

%Point = type { i32, i32 }

@"ct$test_Point" = linkonce constant %.introspect { i8 10, i64 8, i64 0, i64 2, [0 x i64] zeroinitializer }, align 8
@.__const = private unnamed_addr constant %Point { i32 5, i32 6 }, align 4

define void @test_test1() #0 {
entry:
  %p = alloca %Point, align 4
  %0 = bitcast %Point* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %0, i8* align 4 bitcast (%Point* @.__const to i8*), i32 8, i1 false)
  ret void
}
