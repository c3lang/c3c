// #target: x64-darwin

extern func void printf(char *, ...);

func void main()
{

    bool b = true;
    bool* c = &b;
    if (*c ? *c : *c) printf("Woa!\n");
    if (b ? b : b) printf("Woa!\n");
    if (*c ?: *c) printf("Woa!\n");
    if (b ?: b) printf("Woa!\n");
}

// #expect: ternary_bool.ll

define void @main() #0 {
entry:
  %b = alloca i8, align 1
  %c = alloca i8*, align 8
  store i8 1, i8* %b, align 1
  store i8* %b, i8** %c, align 8
  %0 = load i8*, i8** %c, align 8
  %1 = load i8, i8* %0, align 8
  %2 = trunc i8 %1 to i1
  br i1 %2, label %cond.lhs, label %cond.rhs

cond.lhs:                                         ; preds = %entry
  %3 = load i8*, i8** %c, align 8
  %4 = load i8, i8* %3, align 8
  br label %cond.phi

cond.rhs:                                         ; preds = %entry
  %5 = load i8*, i8** %c, align 8
  %6 = load i8, i8* %5, align 8
  br label %cond.phi

cond.phi:                                         ; preds = %cond.rhs, %cond.lhs
  %val = phi i8 [ %4, %cond.lhs ], [ %6, %cond.rhs ]
  %7 = trunc i8 %val to i1
  br i1 %7, label %if.then, label %if.exit

if.then:                                          ; preds = %cond.phi
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0))
  br label %if.exit

if.exit:                                          ; preds = %if.then, %cond.phi
  %8 = load i8, i8* %b, align 1
  %9 = trunc i8 %8 to i1
  br i1 %9, label %cond.lhs1, label %cond.rhs2

cond.lhs1:                                        ; preds = %if.exit
  %10 = load i8, i8* %b, align 1
  br label %cond.phi3

cond.rhs2:                                        ; preds = %if.exit
  %11 = load i8, i8* %b, align 1
  br label %cond.phi3

cond.phi3:                                        ; preds = %cond.rhs2, %cond.lhs1
  %val4 = phi i8 [ %10, %cond.lhs1 ], [ %11, %cond.rhs2 ]
  %12 = trunc i8 %val4 to i1
  br i1 %12, label %if.then5, label %if.exit6

if.then5:                                         ; preds = %cond.phi3
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0))
  br label %if.exit6

if.exit6:                                         ; preds = %if.then5, %cond.phi3
  %13 = load i8*, i8** %c, align 8
  %14 = load i8, i8* %13, align 8
  %15 = trunc i8 %14 to i1
  br i1 %15, label %cond.phi8, label %cond.rhs7

cond.rhs7:                                        ; preds = %if.exit6
  %16 = load i8*, i8** %c, align 8
  %17 = load i8, i8* %16, align 8
  %18 = trunc i8 %17 to i1
  br label %cond.phi8

cond.phi8:                                        ; preds = %cond.rhs7, %if.exit6
  %val9 = phi i1 [ %15, %if.exit6 ], [ %18, %cond.rhs7 ]
  br i1 %val9, label %if.then10, label %if.exit11

if.then10:                                        ; preds = %cond.phi8
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0))
  br label %if.exit11

if.exit11:                                        ; preds = %if.then10, %cond.phi8
  %19 = load i8, i8* %b, align 1
  %20 = trunc i8 %19 to i1
  br i1 %20, label %cond.phi13, label %cond.rhs12

cond.rhs12:                                       ; preds = %if.exit11
  %21 = load i8, i8* %b, align 1
  %22 = trunc i8 %21 to i1
  br label %cond.phi13

cond.phi13:                                       ; preds = %cond.rhs12, %if.exit11
  %val14 = phi i1 [ %20, %if.exit11 ], [ %22, %cond.rhs12 ]
  br i1 %val14, label %if.then15, label %if.exit16

if.then15:                                        ; preds = %cond.phi13
  call void (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0))
  br label %if.exit16

if.exit16:                                        ; preds = %if.then15, %cond.phi13
  ret void
}
