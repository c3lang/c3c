module std::os::win32;

typedef Bool = int;
typedef Boolean = Byte;
typedef Byte = char;
typedef CChar = cinterop::CChar;
typedef Char = cinterop::CChar;
typedef Colorref = DWord;
typedef DWord = uint;
typedef DWordlong = ulong;
typedef DWordPtr = ULongPtr;
typedef DWord32 = uint;
typedef DWord64 = ulong;
typedef Float = float;
typedef HAccel = Handle;
typedef HalfPtr = int;
typedef Handle = PVoid;
typedef HBitmap = Handle;
typedef HBrush = Handle;
typedef HColorspace = Handle;
typedef HConv = Handle;
typedef HConvlist = Handle;
typedef HCursor = HIcon;
typedef HDc = Handle;
typedef HDDEdata = Handle;
typedef HDesk = Handle;
typedef HDrop = Handle;
typedef HDwp = Handle;
typedef HFile = int;
typedef HFont = Handle;
typedef HGdiobj = Handle;
typedef HGlobal = Handle;
typedef HHook = Handle;
typedef HIcon = Handle;
typedef HInstance = Handle;
typedef HKey = Handle;
typedef HKl = Handle;
typedef HLocal = Handle;
typedef HMenu = Handle;
typedef HMetafile = Handle;
typedef HModule = Handle;
typedef HMonitor = Handle;
typedef HPalette = Handle;
typedef HPen = Handle;
typedef HResult = Long;
typedef HRgn = Handle;
typedef HRsrc = Handle;
typedef HSz = Handle;
typedef HWinsta = Handle;
typedef HWnd = Handle;
typedef Int = int;
typedef IntPtr = iptr;
typedef Int8 = ichar;
typedef Int16 = short;
typedef Int32 = int;
typedef Int64 = long;
typedef Langid = Word;
typedef Lcid = DWord;
typedef Lctype = DWord;
typedef Lgrpid = DWord;
typedef Long = int;
typedef Longlong = long;
typedef LongPtr = iptr;
typedef Long32 = int;
typedef Long64 = long;
typedef LParam = LongPtr;
typedef LPBool = Bool*;
typedef LPByte = Byte*;
typedef LPColorref = DWord*;
typedef LPCStr = CChar*;
typedef LPCTstr = LPCWstr;
typedef LPCVoid = void*;
typedef LPCWstr = WChar*;
typedef LPDWord = DWord*;
typedef LPHandle = Handle*;
typedef LPInt = int*;
typedef LPLong = int*;
typedef LPStr = CChar*;
typedef LPTstr = LPWstr;
typedef LPVoid = void*;
typedef LPWord = Word*;
typedef LPWstr = WChar*;
typedef LResult = LongPtr;
typedef PBool = Bool*;
typedef PBoolean = Boolean*;
typedef PByte = Byte*;
typedef PChar = Char*;
typedef PCstr = Char*;
typedef PCTstr = LPCWstr;
typedef PCUnicodeString = UnicodeString*;
typedef PCWstr = Char16*;
typedef PDWord = DWord*;
typedef PDWordlong = DWordlong*;
typedef PDWordPtr = DWordPtr*;
typedef PDWord32 = DWord32*;
typedef PDWord64 = DWord64*;
typedef PFloat = Float*;
typedef PHalfPtr = HalfPtr*;
typedef PHandle = Handle*;
typedef PHKey = HKey*;
typedef PInt = int*;
typedef PIntPtr = IntPtr*;
typedef PInt8 = Int8*;
typedef PInt16 = Int16*;
typedef PInt32 = Int32*;
typedef PInt64 = Int64*;
typedef PLcid = PDWord;
typedef PLong = Long*;
typedef PLonglong = Longlong*;
typedef PLongPtr = LongPtr*;
typedef PLong32 = Long32*;
typedef PLong64 = Long64*;
typedef Pointer32 = uint;
typedef Pointer64 = uptr;
typedef PointerSigned = iptr;
typedef PointerUnsigned = uptr;
typedef PShort = Short*;
typedef PSizeT = usz*;
typedef PSSizeT = isz*;
typedef PStr = Char*;
typedef PTByte = TByte*;
typedef PTChar = TChar*;
typedef PTStr = LPWstr;
typedef PUChar = UChar*;
typedef PUHalfPtr = UHalfPtr*;
typedef PUInt = UInt*;
typedef PUIntPtr = UIntPtr*;
typedef PUInt8 = UInt8*;
typedef PUInt16 = UInt16*;
typedef PUInt32 = UInt32*;
typedef PUInt64 = UInt64*;
typedef PULong = ULong*;
typedef PULonglong = ULonglong*;
typedef PULongPtr = ULongPtr*;
typedef PULong32 = ULong32*;
typedef PULong64 = ULong64*;
typedef PUnicodeString = UnicodeString*;
typedef PUShort = UShort*;
typedef PVoid = void*;
typedef PWChar = WChar*;
typedef PWord = Word*;
typedef PWStr = WChar*;
typedef QWord = ulong;
typedef ScHandle = Handle;
typedef ScLong = LPVoid;
typedef ServiceStatusHandle = Handle;
typedef Short = short;
typedef SizeT = usz;
typedef SSizeT = isz;
typedef TByte = WChar;
typedef TChar = WChar;
typedef UChar = char;
typedef UHalfPtr = uint;
typedef UInt = uint;
typedef UIntPtr = uptr;
typedef UInt8 = char;
typedef UInt16 = ushort;
typedef UInt32 = uint;
typedef UInt64 = ulong;
typedef ULong = uint;
typedef ULonglong = ulong;
typedef ULongPtr = ulong;
typedef ULong32 = uint;
typedef ULong64 = ulong;
typedef UShort = ushort;
typedef Usn = Longlong;
typedef WChar = Char16;
typedef Word = ushort;
typedef WParam = UIntPtr;

struct UnicodeString
{
	UShort length;
	UShort maximum_length;
	PWStr buffer;
}
